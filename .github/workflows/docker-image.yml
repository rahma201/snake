name: Snake Game CI/CD

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: rahmashelbayeh/snakegame
  TAG: ${{ github.run_id }}

jobs:
  docker_build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./snakegame
          file: ./snakegame/Dockerfile
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ env.TAG }}

  deploy:
    name: Deploy Snake Game
    needs: docker_build
    runs-on: ubuntu-latest
    steps:
      - name: SSH into server and deploy
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            echo "Checking for existing snakegame container..."
            if [ $(docker ps -q -f name=snakegame) ]; then
              echo "Stopping old snakegame container..."
              docker rm -f snakegame
            fi

            echo "Pulling latest image..."
            docker pull ${{ env.IMAGE_NAME }}:${{ env.TAG }}

            echo "Starting new snakegame container on port 8080..."
            docker run -d -p 8080:80 --name snakegame ${{ env.IMAGE_NAME }}:${{ env.TAG }}

            echo "Deployment complete! Access your game at http://$SERVER_IP:8080"
